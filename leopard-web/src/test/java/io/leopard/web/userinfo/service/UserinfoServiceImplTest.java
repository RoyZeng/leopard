/**
 * This class has been generated by Fast Code Eclipse Plugin 
 * For more information please go to http://fast-code.sourceforge.net/
 * @author : Administrator
 * Created : 04/16/2013
 */

package io.leopard.web.userinfo.service;

import io.leopard.web.userinfo.UriListChecker;

import org.junit.Assert;
import org.junit.Test;
import org.mockito.Mockito;
import org.springframework.mock.web.MockHttpServletRequest;

public class UserinfoServiceImplTest {

	protected final ConfigHandler loginHandler = Mockito.spy(new ConfigHandler());

	//
	// @Test
	// public void login() {
	// LoginService loginService = Mockito.mock(LoginService.class);
	// UserinfoServiceImpl userinfoService = new UserinfoServiceImpl();
	// Mockito.doReturn(loginService).when(this.loginHandler).getLoginService();
	// userinfoService.login(null, null);
	// Mockito.verify(loginService).validate(loginHandler, null, null);
	// }

	// @Test
	// public void isEnableTimeLog() {
	// UserinfoServiceImpl userinfoService = new UserinfoServiceImpl();
	// Mockito.doReturn(true).when(this.loginHandler).isEnableTimeLog();
	// Assert.assertTrue(userinfoService.isEnableTimeLog());
	// }

	// @Test
	// public void forwardLoginUrl() {
	// LoginService loginService = Mockito.mock(LoginService.class);
	// UserinfoServiceImpl userinfoService = new UserinfoServiceImpl();
	// Mockito.doReturn(loginService).when(this.loginHandler).getLoginService();
	// userinfoService.forwardLoginUrl(null, null);
	// Mockito.verify(loginService).forwardLoginUrl(null, null);
	// }

	@Test
	public void isExcludeUri() {
		UserinfoServiceImpl userinfoService = new UserinfoServiceImpl();
		UriListChecker excludeLoginUriListChecker = Mockito.mock(UriListChecker.class);

		userinfoService.setExcludeLoginUriListChecker(excludeLoginUriListChecker);

		MockHttpServletRequest request = new MockHttpServletRequest();

		request.setRequestURI("/index.do");

		Mockito.doReturn(true).when(excludeLoginUriListChecker).exists("/index.do");
		Assert.assertTrue(userinfoService.isExcludeUri(request));

	}
}
